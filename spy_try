#!/usr/bin/python3
#+
# Test of using Asterisk ChanSpy application. Note this assumes that a context
# named "call_monitor" has been defined in extensions.conf, something like this:
#
#    [call_monitor]
#    exten => s,1,Playback(monitored)
#    exten => s,n,ChanSpy(${VICTIM})
#    exten => s,n,Hangup()
#
# First this script initiates a call between from_channel and to_context/to_extension;
# Then it sets up another call between the spy_channel and the spy_context/spy_extension
# as defined above.
#
# Copyright 2008-2022 by Lawrence D'Oliveiro <ldo@geek-central.gen.nz>. This
# script is licensed CC0 <https://creativecommons.org/publicdomain/zero/1.0/>;
# do with it what you will.
#-

import sys
import time
import getopt
import seaskirt


#+
# Mainline
#-

opts, args = getopt.getopt \
  (
    sys.argv[1:],
    "",
    [
        "debug", "user=", "password=",
        "delay=", "timeout=",
        "from-channel=", "to-context=", "to-extension=",
        "spy-channel=", "spy-context=", "spy-extension=", "victim-var=",
    ]
  )
user = password = None
debug = False
delay = 5 # default
timeout = 10 # default
from_channel = to_context = to_extension = None
spy_channel = spy_context = spy_extension = None
victim_var = "VICTIM" # default
for keyword, value in opts :
    if keyword == "--user" :
        user = value
    elif keyword == "--password" :
        password = value
    elif keyword == "--debug" :
        debug = True
    elif keyword == "--delay" :
        delay = float(value)
    elif keyword == "--timeout" :
        timeout = float(value)
    elif keyword == "--from-channel" :
        from_channel = value
    elif keyword == "--to-context" :
        to_context = value
    elif keyword == "--to-extension" :
        to_extension = value
    elif keyword == "--spy-channel" :
        spy_channel = value
    elif keyword == "--spy-context" :
        spy_context = value
    elif keyword == "--spy-extension" :
        spy_extension = value
    elif keyword == "--victim-var" :
        victim_var = value
    #end if
#end for
if (
    any
      (
        v == None
        for v in
            (
                user, password,
                from_channel, to_context, to_extension,
                spy_channel, spy_context, spy_extension,
            )
      )
) :
    raise getopt.GetoptError("missing one or more required options")
#end if

the_conn = seaskirt.Manager(debug = debug)
if debug :
    sys.stdout.write("the_conn opened, hello = \"%s\"\n" % the_conn.hello)
#end if
the_conn.authenticate(user, password)

response = the_conn.transact \
  (
    action = "Originate",
    parms =
        {
            "Channel" : from_channel,
            "Context" : to_context,
            "Exten" : to_extension,
            "Priority" : 1,
            "Timeout" : round(timeout * 1000),
        }
  )
sys.stdout.write(repr(response) + "\n")

time.sleep(delay) # just for fun

response = the_conn.transact \
  (
    action = "Originate",
    parms =
        {
            "Channel" : spy_channel,
            "Context" : spy_context,
            "Exten" : spy_extension,
            "Priority" : 1,
            "Timeout" : round(timeout * 1000),
        },
    vars =
        {
            victim_var : from_channel,
        },
  )
sys.stdout.write(repr(response) + "\n")

the_conn.transact("Logoff", {})
the_conn.close()
